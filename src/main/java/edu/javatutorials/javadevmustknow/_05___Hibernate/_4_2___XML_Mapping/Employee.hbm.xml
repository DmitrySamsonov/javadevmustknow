<?xml version = "1.0" encoding = "utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--
Based on the Employee POJO class and Employee RDBMS table,
we can define XML mapping file - <classname>.hbm.xml,
which instructs Hibernate
how to map the defined class or classes to the database tables.
-->

<!--
The mapping document is an XML document having <hibernate-mapping> as the root element,
which contains all the <class> elements.
-->
<hibernate-mapping>

    <!--
    The <class> elements are used to define specific mappings from a Java classes to the database tables.
    The name="" attribute of the <class> element is specified Java_class_name
    and the table="" attribute is specified the database_table_name.
    -->
    <class name="edu.javatutorials.javadevmustknow._05___Hibernate._4_2___XML_Mapping.Employee" table="EMPLOYEE">


        <!--
        The <meta> element is optional element
        and can be used to create the class description.
        -->
        <meta attribute="class-description">
            This class contains the employee detail.
        </meta>


        <!--
        The <id> element  maps the unique ID attribute in Java_class        to the primary key of the database_table.
        The name="" attribute of the <id> element refers to the property in the Java_class
        and the column="" attribute refers to the column in the database_table.
        The type="" attribute holds the hibernate mapping type,
        this mapping types will convert from Java to SQL data type.
        -->
        <id name="id" column="id" type="int">
            <!--
            The <generator> element within the id element is used to generate the primary key values automatically.
            The class="" attribute of the <generator> element is set to "native"
            to let hibernate pick up either "identity", "sequence", or "hilo" algorithm
            to create primary key depending upon the capabilities of the underlying database.
            -->
            <generator class="native"/>
        </id>

        <!--
        The <property> element is used to map a Java class property to a column in the database table.
        The name="" attribute refers to the property in the Java_class
        and the column="" attribute refers to the column in the database_table.
        The type="" attribute holds the hibernate mapping type,
        this mapping types will convert from Java to SQL data type.
        -->
        <property name="firstName" column="first_name" type="string"/>
        <property name="lastName" column="last_name" type="string"/>
        <property name="salary" column="salary" type="int"/>

    </class>
</hibernate-mapping>

